"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Image = _interopRequireDefault(require("../Image.js"));

var _ImageState = _interopRequireDefault(require("../ImageState.js"));

var _dom = require("../dom.js");

var _EventType = _interopRequireDefault(require("../events/EventType.js"));

var _extent = require("../extent.js");

var _proj = require("../proj.js");

var _Image2 = _interopRequireWildcard(require("./Image.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @module ol/source/ImageStatic
 */
var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    };

    return extendStatics(d, b);
  };

  return function (d, b) {
    extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

/**
 * @typedef {Object} Options
 * @property {import("./Source.js").AttributionLike} [attributions] Attributions.
 * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that
 * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.
 * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.
 * @property {import("../extent.js").Extent} [imageExtent] Extent of the image in map coordinates.
 * This is the [left, bottom, right, top] map coordinates of your image.
 * @property {import("../Image.js").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.
 * @property {import("../proj.js").ProjectionLike} projection Projection.
 * @property {import("../size.js").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this
 * only needs to be set if auto-detection fails for some reason.
 * @property {string} url Image URL.
 */

/**
 * @classdesc
 * A layer source for displaying a single, static image.
 * @api
 */
var Static =
/** @class */
function (_super) {
  __extends(Static, _super);
  /**
   * @param {Options} options ImageStatic options.
   */


  function Static(options) {
    var _this = this;

    var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : null;
    var
    /** @type {import("../Image.js").LoadFunction} */
    imageLoadFunction = options.imageLoadFunction !== undefined ? options.imageLoadFunction : _Image2.defaultImageLoadFunction;
    _this = _super.call(this, {
      attributions: options.attributions,
      projection: (0, _proj.get)(options.projection)
    }) || this;
    /**
     * @private
     * @type {string}
     */

    _this.url_ = options.url;
    /**
     * @private
     * @type {import("../extent.js").Extent}
     */

    _this.imageExtent_ = options.imageExtent;
    /**
     * @private
     * @type {import("../Image.js").default}
     */

    _this.image_ = new _Image.default(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);
    /**
     * @private
     * @type {import("../size.js").Size}
     */

    _this.imageSize_ = options.imageSize ? options.imageSize : null;

    _this.image_.addEventListener(_EventType.default.CHANGE, _this.handleImageChange.bind(_this));

    return _this;
  }
  /**
   * Returns the image extent
   * @return {import("../extent.js").Extent} image extent.
   * @api
   */


  Static.prototype.getImageExtent = function () {
    return this.imageExtent_;
  };
  /**
   * @inheritDoc
   */


  Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {
    if ((0, _extent.intersects)(extent, this.image_.getExtent())) {
      return this.image_;
    }

    return null;
  };
  /**
   * Return the URL used for this image source.
   * @return {string} URL.
   * @api
   */


  Static.prototype.getUrl = function () {
    return this.url_;
  };
  /**
   * @inheritDoc
   */


  Static.prototype.handleImageChange = function (evt) {
    if (this.image_.getState() == _ImageState.default.LOADED) {
      var imageExtent = this.image_.getExtent();
      var image = this.image_.getImage();
      var imageWidth = void 0,
          imageHeight = void 0;

      if (this.imageSize_) {
        imageWidth = this.imageSize_[0];
        imageHeight = this.imageSize_[1];
      } else {
        imageWidth = image.width;
        imageHeight = image.height;
      }

      var resolution = (0, _extent.getHeight)(imageExtent) / imageHeight;
      var targetWidth = Math.ceil((0, _extent.getWidth)(imageExtent) / resolution);

      if (targetWidth != imageWidth) {
        var context = (0, _dom.createCanvasContext2D)(targetWidth, imageHeight);
        var canvas = context.canvas;
        context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);
        this.image_.setImage(canvas);
      }
    }

    _super.prototype.handleImageChange.call(this, evt);
  };

  return Static;
}(_Image2.default);

var _default = Static;
exports.default = _default;