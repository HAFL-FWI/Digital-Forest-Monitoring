{"id":"../node_modules/ol/functions.js","dependencies":[{"name":"/Users/hk/Sites/digital-forest-monitoring/package.json","includedInParent":true,"mtime":1574333047455},{"name":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/package.json","includedInParent":true,"mtime":1573122283680},{"name":"./array.js","loc":{"line":4,"column":38},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/functions.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/array.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TRUE = TRUE;\nexports.FALSE = FALSE;\nexports.VOID = VOID;\nexports.memoizeOne = memoizeOne;\n\nvar _array = require(\"./array.js\");\n\n/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nfunction TRUE() {\n  return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\n\n\nfunction FALSE() {\n  return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\n\n\nfunction VOID() {}\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\n\n\nfunction memoizeOne(fn) {\n  var called = false;\n  /** @type {ReturnType} */\n\n  var lastResult;\n  /** @type {Array<any>} */\n\n  var lastArgs;\n  var lastThis;\n  return function () {\n    var nextArgs = Array.prototype.slice.call(arguments);\n\n    if (!called || this !== lastThis || !(0, _array.equals)(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n\n    return lastResult;\n  };\n}"},"sourceMaps":null,"error":null,"hash":"6f2018691fcfef48eec747d96aa91220","cacheData":{"env":{}}}