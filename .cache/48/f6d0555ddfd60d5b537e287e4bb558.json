{"id":"../node_modules/ol/layer/Tile.js","dependencies":[{"name":"/Users/hk/Sites/digital-forest-monitoring/package.json","includedInParent":true,"mtime":1574333047455},{"name":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/package.json","includedInParent":true,"mtime":1573122283680},{"name":"./BaseTile.js","loc":{"line":17,"column":26},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/layer/Tile.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/layer/BaseTile.js"},{"name":"../renderer/canvas/TileLayer.js","loc":{"line":18,"column":36},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/layer/Tile.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/renderer/canvas/TileLayer.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _BaseTile = _interopRequireDefault(require(\"./BaseTile.js\"));\n\nvar _TileLayer = _interopRequireDefault(require(\"../renderer/canvas/TileLayer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __extends = void 0 && (void 0).__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/Tile\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer =\n/** @class */\nfunction (_super) {\n  __extends(TileLayer, _super);\n  /**\n   * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n   */\n\n\n  function TileLayer(opt_options) {\n    return _super.call(this, opt_options) || this;\n  }\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n\n\n  TileLayer.prototype.createRenderer = function () {\n    return new _TileLayer.default(this);\n  };\n\n  return TileLayer;\n}(_BaseTile.default);\n\nvar _default = TileLayer;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"1fa004a0653d4995cc36f013957ab66a","cacheData":{"env":{}}}