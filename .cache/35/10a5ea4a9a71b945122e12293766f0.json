{"id":"../node_modules/@material/top-app-bar/component.js","dependencies":[{"name":"/Users/hk/Sites/digital-forest-monitoring/package.json","includedInParent":true,"mtime":1574333047455},{"name":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/top-app-bar/package.json","includedInParent":true,"mtime":1573028242885},{"name":"tslib","loc":{"line":23,"column":25},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/top-app-bar/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/tslib/tslib.es6.js"},{"name":"@material/base/component","loc":{"line":24,"column":29},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/top-app-bar/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/base/component.js"},{"name":"@material/ripple/component","loc":{"line":25,"column":26},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/top-app-bar/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/ripple/component.js"},{"name":"./constants","loc":{"line":26,"column":36},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/top-app-bar/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/top-app-bar/constants.js"},{"name":"./fixed/foundation","loc":{"line":27,"column":44},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/top-app-bar/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/top-app-bar/fixed/foundation.js"},{"name":"./short/foundation","loc":{"line":28,"column":44},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/top-app-bar/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/top-app-bar/short/foundation.js"},{"name":"./standard/foundation","loc":{"line":29,"column":39},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/top-app-bar/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/top-app-bar/standard/foundation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MDCTopAppBar = void 0;\n\nvar tslib_1 = _interopRequireWildcard(require(\"tslib\"));\n\nvar _component = require(\"@material/base/component\");\n\nvar _component2 = require(\"@material/ripple/component\");\n\nvar _constants = require(\"./constants\");\n\nvar _foundation = require(\"./fixed/foundation\");\n\nvar _foundation2 = require(\"./short/foundation\");\n\nvar _foundation3 = require(\"./standard/foundation\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCTopAppBar =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCTopAppBar, _super);\n\n  function MDCTopAppBar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCTopAppBar.attachTo = function (root) {\n    return new MDCTopAppBar(root);\n  };\n\n  MDCTopAppBar.prototype.initialize = function (rippleFactory) {\n    if (rippleFactory === void 0) {\n      rippleFactory = function (el) {\n        return _component2.MDCRipple.attachTo(el);\n      };\n    }\n\n    this.navIcon_ = this.root_.querySelector(_constants.strings.NAVIGATION_ICON_SELECTOR); // Get all icons in the toolbar and instantiate the ripples\n\n    var icons = [].slice.call(this.root_.querySelectorAll(_constants.strings.ACTION_ITEM_SELECTOR));\n\n    if (this.navIcon_) {\n      icons.push(this.navIcon_);\n    }\n\n    this.iconRipples_ = icons.map(function (icon) {\n      var ripple = rippleFactory(icon);\n      ripple.unbounded = true;\n      return ripple;\n    });\n    this.scrollTarget_ = window;\n  };\n\n  MDCTopAppBar.prototype.initialSyncWithDOM = function () {\n    this.handleNavigationClick_ = this.foundation_.handleNavigationClick.bind(this.foundation_);\n    this.handleWindowResize_ = this.foundation_.handleWindowResize.bind(this.foundation_);\n    this.handleTargetScroll_ = this.foundation_.handleTargetScroll.bind(this.foundation_);\n    this.scrollTarget_.addEventListener('scroll', this.handleTargetScroll_);\n\n    if (this.navIcon_) {\n      this.navIcon_.addEventListener('click', this.handleNavigationClick_);\n    }\n\n    var isFixed = this.root_.classList.contains(_constants.cssClasses.FIXED_CLASS);\n    var isShort = this.root_.classList.contains(_constants.cssClasses.SHORT_CLASS);\n\n    if (!isShort && !isFixed) {\n      window.addEventListener('resize', this.handleWindowResize_);\n    }\n  };\n\n  MDCTopAppBar.prototype.destroy = function () {\n    this.iconRipples_.forEach(function (iconRipple) {\n      return iconRipple.destroy();\n    });\n    this.scrollTarget_.removeEventListener('scroll', this.handleTargetScroll_);\n\n    if (this.navIcon_) {\n      this.navIcon_.removeEventListener('click', this.handleNavigationClick_);\n    }\n\n    var isFixed = this.root_.classList.contains(_constants.cssClasses.FIXED_CLASS);\n    var isShort = this.root_.classList.contains(_constants.cssClasses.SHORT_CLASS);\n\n    if (!isShort && !isFixed) {\n      window.removeEventListener('resize', this.handleWindowResize_);\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  MDCTopAppBar.prototype.setScrollTarget = function (target) {\n    // Remove scroll handler from the previous scroll target\n    this.scrollTarget_.removeEventListener('scroll', this.handleTargetScroll_);\n    this.scrollTarget_ = target; // Initialize scroll handler on the new scroll target\n\n    this.handleTargetScroll_ = this.foundation_.handleTargetScroll.bind(this.foundation_);\n    this.scrollTarget_.addEventListener('scroll', this.handleTargetScroll_);\n  };\n\n  MDCTopAppBar.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      hasClass: function (className) {\n        return _this.root_.classList.contains(className);\n      },\n      addClass: function (className) {\n        return _this.root_.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root_.classList.remove(className);\n      },\n      setStyle: function (property, value) {\n        return _this.root_.style.setProperty(property, value);\n      },\n      getTopAppBarHeight: function () {\n        return _this.root_.clientHeight;\n      },\n      notifyNavigationIconClicked: function () {\n        return _this.emit(_constants.strings.NAVIGATION_EVENT, {});\n      },\n      getViewportScrollY: function () {\n        var win = _this.scrollTarget_;\n        var el = _this.scrollTarget_;\n        return win.pageYOffset !== undefined ? win.pageYOffset : el.scrollTop;\n      },\n      getTotalActionItems: function () {\n        return _this.root_.querySelectorAll(_constants.strings.ACTION_ITEM_SELECTOR).length;\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    var foundation;\n\n    if (this.root_.classList.contains(_constants.cssClasses.SHORT_CLASS)) {\n      foundation = new _foundation2.MDCShortTopAppBarFoundation(adapter);\n    } else if (this.root_.classList.contains(_constants.cssClasses.FIXED_CLASS)) {\n      foundation = new _foundation.MDCFixedTopAppBarFoundation(adapter);\n    } else {\n      foundation = new _foundation3.MDCTopAppBarFoundation(adapter);\n    }\n\n    return foundation;\n  };\n\n  return MDCTopAppBar;\n}(_component.MDCComponent);\n\nexports.MDCTopAppBar = MDCTopAppBar;"},"sourceMaps":null,"error":null,"hash":"7247fbb6f6626a571245ee54916f0259","cacheData":{"env":{}}}