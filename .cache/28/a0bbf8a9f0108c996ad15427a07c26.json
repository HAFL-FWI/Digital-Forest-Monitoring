{"id":"utils/homepage_util.js","dependencies":[{"name":"/Users/hk/Sites/digital-forest-monitoring/package.json","includedInParent":true,"mtime":1574333047455},{"name":"../img/jaehrl_veraenderung.jpg","loc":{"line":1,"column":30},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/homepage_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/src/img/jaehrl_veraenderung.jpg"},{"name":"../img/sturmschaeden.jpg","loc":{"line":2,"column":31},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/homepage_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/src/img/sturmschaeden.jpg"},{"name":"../img/geoservices.jpg","loc":{"line":3,"column":24},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/homepage_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/src/img/geoservices.jpg"},{"name":"./router","loc":{"line":4,"column":23},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/homepage_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/src/utils/router.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _jaehrl_veraenderung = _interopRequireDefault(require(\"../img/jaehrl_veraenderung.jpg\"));\n\nvar _sturmschaeden = _interopRequireDefault(require(\"../img/sturmschaeden.jpg\"));\n\nvar _geoservices = _interopRequireDefault(require(\"../img/geoservices.jpg\"));\n\nvar _router = require(\"./router\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar homepageUtil = {\n  model: {\n    /*\n     * the element with the homepage content.\n     */\n    content: document.getElementsByClassName(\"content\")[0],\n\n    /*\n     * homepage jumbotron text.\n     */\n    jumbotronText: \"Auf dieser Seite finden Sie Links zu Kartenviewern und Geodiensten \" + \"welche verschiedenste Produkte wie Veränderungen oder Störungen im \" + \"Wald visualisieren. Quelle der Geodaten sind die frei verfügbaren \" + \"Sentinel Satellitenbilder. Alle angebotenen Karten/Dienste beziehen \" + \"sich ausschliesslich auf die Schweiz.\",\n\n    /*\n     * content for every card on the hompage.\n     */\n    cards: {\n      veraenderung: {\n        image: _jaehrl_veraenderung.default,\n        title: \"Jährliche Veränderung\",\n        subtitle: \"Geodaten: Dominique Weber, HAFL\",\n        description: \"Der Wald verändert sich ständig. Hier können Sie sehen, \" + \"wo Veränderungen z.B. durch Holzschläge stattgefunden haben.\",\n        linktext: \"zum viewer\",\n        route: \"/veraenderung\"\n      },\n      stoerung: {\n        image: _sturmschaeden.default,\n        title: \"Natürliche Störungen\",\n        subtitle: \"Geodaten: Dominique Weber, HAFL\",\n        description: \"Hier können Sie sehen, wo der Wald natürlichen Störungen wie z.B. \" + \"Borkenkäferbefall oder Sommersturmschäden ausgesetzt ist.\",\n        route: \"/stoerungen\",\n        linktext: \"zum viewer\"\n      },\n      geodienste: {\n        image: _geoservices.default,\n        title: \"Geodienste\",\n        subtitle: \"Services: karten-werk GmbH\",\n        description: \"Die WMS, WMTS und WFS Geodienste, können Sie in Ihr GIS \" + \"importieren und mit Ihren eigenen Geodaten kombinieren.\",\n        route: \"/services\",\n        linktext: \"zu den Services\"\n      }\n    }\n  },\n  controller: {\n    /*\n     * calls the necessary functions to display the hompage.\n     */\n    init: function init() {\n      homepageUtil.controller.removeContent();\n      homepageUtil.controller.createJumbotron();\n      homepageUtil.controller.createHomepageCards();\n    },\n\n    /*\n     * removes 'old' content like viewers, services etc.\n     */\n    removeContent: function removeContent() {\n      homepageUtil.model.content.innerHTML = \"\";\n    },\n\n    /*\n     * displays the jumbotron.\n     */\n    createJumbotron: function createJumbotron() {\n      var jumbotron = homepageUtil.view.createJumbotron(homepageUtil.model.jumbotronText);\n      homepageUtil.model.content.appendChild(jumbotron);\n    },\n\n    /*\n     * creates all the grid with the cards on the homepage.\n     * does not have any parameters, but uses the model.cards object and some view functions to get the job done.\n     * @returns {DocumentFragment} - The grid with all the cards that were attached to the DOM.\n     */\n    createHomepageCards: function createHomepageCards() {\n      var grid = homepageUtil.view.createGrid();\n      var cards = document.createDocumentFragment();\n\n      for (var card in homepageUtil.model.cards) {\n        var cardElement = homepageUtil.view.createCard(homepageUtil.model.cards[card]);\n        cards.appendChild(cardElement);\n      }\n\n      grid.firstChild.appendChild(cards);\n      homepageUtil.model.content.appendChild(grid);\n      return grid;\n    }\n  },\n  view: {\n    /*\n     * creates a jumbotron element.\n     * @param {string} text - the text to display inside the jumbotron.\n     * @returns {HTMLElement} jumbotron - div cotaining the jumbotron.\n     */\n    createJumbotron: function createJumbotron(text) {\n      var jumbotron = document.createElement(\"div\");\n      var jumbotronText = document.createElement(\"div\");\n      jumbotron.classList.add(\"jumbotron\");\n      jumbotronText.classList.add(\"jumbotron__text\");\n      jumbotronText.innerHTML = text;\n      jumbotron.appendChild(jumbotronText);\n      return jumbotron;\n    },\n\n    /*\n     * creates the grid layout containing the cards.\n     * @returns {HTMLElement} grid - a div with a MDCGrid inside.\n     */\n    createGrid: function createGrid() {\n      var grid = document.createElement(\"div\");\n      var gridInner = document.createElement(\"div\");\n      grid.classList.add(\"mdc-layout-grid\");\n      gridInner.classList.add(\"mdc-layout-grid__inner\");\n      grid.appendChild(gridInner);\n      return grid;\n    },\n\n    /*\n     creates a html card element.\n     @param {object} params - object with function parameters.\n     @param {string} params.image - path to the card image.\n     @param {string} params.title - card title.\n     @param {string} params.subtitle - card subtitle.\n     @param {string} params.description - card description.\n     @param {string} params.route - the url to open when the user clicks on the card.\n     @returns {HTMLElement} cell - a single grid cell containing a card Element.\n    */\n    createCard: function createCard(_ref) {\n      var image = _ref.image,\n          title = _ref.title,\n          subtitle = _ref.subtitle,\n          description = _ref.description,\n          linktext = _ref.linktext,\n          route = _ref.route;\n      var cell = document.createElement(\"div\");\n      var card = document.createElement(\"div\");\n      var cardPrimaryAction = document.createElement(\"div\");\n      var cardMedia = document.createElement(\"div\");\n      var cardTitleContainer = document.createElement(\"div\");\n      var cardTitle = document.createElement(\"h2\");\n      var cardSubTitle = document.createElement(\"h3\");\n      var cardDescription = document.createElement(\"div\");\n      var cardActions = document.createElement(\"div\");\n      var cardActionButtons = document.createElement(\"div\");\n      var actionButton = document.createElement(\"button\");\n      cardTitle.innerHTML = title;\n      cardDescription.innerHTML = description;\n      cardSubTitle.innerHTML = subtitle;\n      actionButton.addEventListener(\"click\", function () {\n        _router.router.navigate(route);\n      });\n      actionButton.innerHTML = linktext;\n      cell.classList.add(\"mdc-layout-grid__cell\", \"mdc-layout-grid__cell--span-4\");\n      card.classList.add(\"mdc-card\", \"homepage-card\");\n      cardPrimaryAction.classList.add(\"mdc-card__primary-action\", \"homepage-card__primary-action\");\n      cardPrimaryAction.addEventListener(\"click\", function () {\n        return _router.router.navigate(route);\n      });\n      cardMedia.classList.add(\"mdc-card__media\", \"mdc-card__media--16-9\", \"homepage-card__media\");\n      cardMedia.style.backgroundImage = 'url(\"' + image + '\")';\n      cardTitleContainer.classList.add(\"homepage-card__primary\");\n      cardTitle.classList.add(\"homepage-card__title\", \"mdc-typography\", \"mdc-typography--headline6\");\n      cardSubTitle.classList.add(\"homepage-card__subtitle\", \"mdc-typography\", \"mdc-typography--subtitle2\");\n      cardDescription.classList.add(\"homepage-card__secondary\", \"mdc-typography\", \"mdc-typography--body2\");\n      cardActions.classList.add(\"mdc-card__actions\");\n      cardActionButtons.classList.add(\"mdc-card__action-buttons\");\n      actionButton.classList.add(\"mdc-card__action--button-secondary\", \"mdc-button\", \"mdc-button--raised\", \"mdc-card__action\", \"mdc-card__action--button\");\n      cell.appendChild(card);\n      card.appendChild(cardPrimaryAction);\n      cardPrimaryAction.appendChild(cardMedia);\n      cardPrimaryAction.appendChild(cardTitleContainer);\n      cardTitleContainer.appendChild(cardTitle);\n      cardTitleContainer.appendChild(cardSubTitle);\n      cardPrimaryAction.appendChild(cardDescription);\n      card.appendChild(cardActions);\n      cardActions.appendChild(cardActionButtons);\n      cardActionButtons.appendChild(actionButton);\n      return cell;\n    }\n  }\n};\nvar _default = homepageUtil;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"02edfb3c6e968d5579e1f7427fbe06cf","cacheData":{"env":{}}}