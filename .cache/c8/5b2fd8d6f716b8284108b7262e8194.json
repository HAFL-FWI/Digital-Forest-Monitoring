{"id":"utils/main_util.js","dependencies":[{"name":"/Users/hk/Sites/digital-forest-monitoring/package.json","includedInParent":true,"mtime":1574333047455},{"name":"ol/style","loc":{"line":1,"column":59},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/main_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/style.js"},{"name":"ol/layer/Vector","loc":{"line":2,"column":24},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/main_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/layer/Vector.js"},{"name":"ol/source/Vector","loc":{"line":3,"column":25},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/main_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/source/Vector.js"},{"name":"ol/format/GeoJSON","loc":{"line":4,"column":20},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/main_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/format/GeoJSON.js"},{"name":"ol/extent","loc":{"line":5,"column":26},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/main_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/extent.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.closeSidebar = exports.openSidebar = exports.removeGeojsonOverlays = exports.displayGeojson = exports.debounce = exports.positionSearchResultContainer = exports.searchResults = exports.dialogContent = exports.dialogTitle = exports.getLayerInfo = exports.impressum = exports.showTitle = exports.hideTitle = exports.getTitle = exports.setTitle = exports.sidebar = void 0;\n\nvar _style = require(\"ol/style\");\n\nvar _Vector = _interopRequireDefault(require(\"ol/layer/Vector\"));\n\nvar _Vector2 = _interopRequireDefault(require(\"ol/source/Vector\"));\n\nvar _GeoJSON = _interopRequireDefault(require(\"ol/format/GeoJSON\"));\n\nvar _extent = require(\"ol/extent\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar appBarTitle = document.getElementsByClassName(\"top-app-bar__title\")[0];\nvar sidebar = document.querySelector(\".sidebar\");\nexports.sidebar = sidebar;\nvar sidebarContent = document.querySelector(\".sidebar__content\");\n/*\n * changes the top appbar title.\n * @param {string} title - the new title to display.\n * @returns {boolean} - true if title changed successfully, false otherwise.\n */\n\nvar setTitle = function setTitle(title) {\n  if (!title) {\n    return false;\n  }\n\n  appBarTitle.innerHTML = title;\n  return true;\n};\n/*\n * calculates the title based on the window.width.\n * @returns {string} title - title to use based on the current window.width.\n */\n\n\nexports.setTitle = setTitle;\n\nvar getTitle = function getTitle() {\n  var width = window.innerWidth;\n  var title = width <= 550 ? \"Waldmonitoring\" : \"Waldmonitoring mit Sentinel Satellitenbildern\";\n  return title;\n};\n/*\n * hide the appBar title\n */\n\n\nexports.getTitle = getTitle;\n\nvar hideTitle = function hideTitle() {\n  appBarTitle.style.display = \"none\";\n};\n/*\n * show the appBar title\n */\n\n\nexports.hideTitle = hideTitle;\n\nvar showTitle = function showTitle() {\n  appBarTitle.style.display = \"block\";\n};\n\nexports.showTitle = showTitle;\nvar impressum = {\n  tite: \"IMRESSUM\",\n  content: \"Dies ist ein Forschungsprojekt der BFH-HAFL im Auftrag bzw. mit\\nUnterst\\xFCtzung des BAFU. Im Rahmen dieses Projektes sollen\\nvorhandene, m\\xF6glichst schweizweit fl\\xE4chendeckende und frei\\nverf\\xFCgbare Fernerkundungsdaten f\\xFCr konkrete Use-Cases und mit einem\\nklaren Mehrwert f\\xFCr die Praxis eingesetzt werden. Das Hauptziel\\ndieses Projektes ist die Implementierung von Kartenviewern sowie\\nGeodiensten f\\xFCr mindestens 3 konkrete Use-Cases.\\n<br /></br />\\nAnsprechperson BFH-HAFL: Dominique Weber (+41 31 910 29 32,\\n<a href=\\\"mailto:dominique.weber@bfh.ch\\\">dominique.weber@bfh.ch</a>)\"\n};\nexports.impressum = impressum;\n\nvar getLayerInfo = function getLayerInfo(overlay) {\n  return \"<div>\\n  <h4>Legende:</h4>\\n  <img src=\\\"https://geoserver.karten-werk.ch//wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&height=15&LAYER=\".concat(overlay.layername, \"&legend_options=forceLabels:on\\\" />\\n  <h4>Beschreibung:</h4>\\n  <section>\").concat(overlay.description, \"</section>\\n  </div>\");\n};\n\nexports.getLayerInfo = getLayerInfo;\nvar dialogTitle = document.querySelector(\"#dialog-title\");\nexports.dialogTitle = dialogTitle;\nvar dialogContent = document.querySelector(\"#dialog-content\");\nexports.dialogContent = dialogContent;\nvar searchResults = document.querySelector(\".autocomplete\");\n/*\n *  set the position of the search result box below the search input.\n */\n\nexports.searchResults = searchResults;\n\nvar positionSearchResultContainer = function positionSearchResultContainer() {\n  var searchInput = document.querySelector(\".mdc-text-field\");\n  var searchMetrics = searchInput.getBoundingClientRect();\n  searchResults.style.left = \"\".concat(searchMetrics.left, \"px\");\n  searchResults.style.width = \"\".concat(searchMetrics.width, \"px\");\n};\n/*\n * debounce function for the places search\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n * credits:https://davidwalsh.name/javascript-debounce-function\n */\n\n\nexports.positionSearchResultContainer = positionSearchResultContainer;\n\nvar debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n/*\n * geojson display styles.\n */\n\n\nexports.debounce = debounce;\nvar image = new _style.Circle({\n  radius: 5,\n  fill: null,\n  stroke: new _style.Stroke({\n    color: \"red\",\n    width: 4\n  })\n});\nvar styles = {\n  Point: new _style.Style({\n    image: image\n  }),\n  LineString: new _style.Style({\n    stroke: new _style.Stroke({\n      color: \"yellow\",\n      width: 4\n    })\n  }),\n  MultiLineString: new _style.Style({\n    stroke: new _style.Stroke({\n      color: \"yellow\",\n      width: 4\n    })\n  }),\n  MultiPoint: new _style.Style({\n    image: image\n  }),\n  MultiPolygon: new _style.Style({\n    stroke: new _style.Stroke({\n      color: \"yellow\",\n      width: 4\n    }),\n    fill: new _style.Fill({\n      color: \"rgba(255, 0, 0, 0.3)\"\n    })\n  }),\n  Polygon: new _style.Style({\n    stroke: new _style.Stroke({\n      color: \"blue\",\n      lineDash: [4],\n      width: 4\n    }),\n    fill: new _style.Fill({\n      color: \"rgba(0, 0, 255, 0.1)\"\n    })\n  }),\n  GeometryCollection: new _style.Style({\n    stroke: new _style.Stroke({\n      color: \"magenta\",\n      width: 2\n    }),\n    fill: new _style.Fill({\n      color: \"magenta\"\n    }),\n    image: new _style.Circle({\n      radius: 10,\n      fill: null,\n      stroke: new _style.Stroke({\n        color: \"magenta\"\n      })\n    })\n  }),\n  Circle: new _style.Style({\n    stroke: new _style.Stroke({\n      color: \"red\",\n      width: 2\n    }),\n    fill: new _style.Fill({\n      color: \"rgba(255,0,0,0.2)\"\n    })\n  })\n};\n/*\n * get the right style for a geojson.\n * @param {object} feature - geojson feature.\n * @returns {object} ol/Style object.\n */\n\nvar styleFunction = function styleFunction(feature) {\n  return styles[feature.getGeometry().getType()];\n};\n/*\n * Adds a Geojson Object to the openlayers map\n * @param {object} geojson - valid geojson object\n * @returns {object} geojsonLayer - ol VectorLayer instance or null in case of failure\n */\n\n\nvar displayGeojson = function displayGeojson() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      geojson = _ref.geojson,\n      map = _ref.map;\n\n  if (!geojson || !map) {\n    return false;\n  }\n\n  removeGeojsonOverlays(map);\n  var vectorSource = createOlVectorSource(geojson);\n  var geojsonLayer = new _Vector.default({\n    source: vectorSource,\n    style: styleFunction,\n    zIndex: map.getLayers().getLength()\n  });\n  geojsonLayer.type = \"geojson\";\n  map.addLayer(geojsonLayer);\n  var extent = vectorSource.getExtent();\n  map.getView().setCenter((0, _extent.getCenter)(extent));\n  return geojsonLayer;\n};\n/*\n * Removes every Geojson overlay from the openlayers map\n * @param {object} map - openlayers map object.\n * @returns {boolean} true in case of success, false otherwise.\n */\n\n\nexports.displayGeojson = displayGeojson;\n\nvar removeGeojsonOverlays = function removeGeojsonOverlays(map) {\n  if (!map) {\n    return false;\n  }\n\n  map.getLayers().forEach(function (layer) {\n    if (layer.type === \"geojson\") {\n      map.removeLayer(layer);\n    }\n  });\n  return true;\n};\n/*\n * creates an openLayers vector source object based on geojson.\n * @param {object} geojson - the geojson used by the source.\n * @returns {object} VectorSource - ol/source/Vector object\n */\n\n\nexports.removeGeojsonOverlays = removeGeojsonOverlays;\n\nvar createOlVectorSource = function createOlVectorSource(geojson) {\n  return new _Vector2.default({\n    features: new _GeoJSON.default().readFeatures(geojson)\n  });\n};\n/*\n * opens the sidebar to display legends, infos etc.\n * @param {object} params\n * @param {DomElement} params.content - the content to display inside the sidebar.\n */\n\n\nvar openSidebar = function openSidebar() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref2$content = _ref2.content,\n      content = _ref2$content === void 0 ? null : _ref2$content;\n\n  sidebar.style.zIndex = 5;\n  sidebar.style.transform = \"scale(1)\";\n\n  if (content) {\n    sidebarContent.appendChild(content);\n  }\n};\n\nexports.openSidebar = openSidebar;\n\nvar closeSidebar = function closeSidebar() {\n  sidebarContent.innerHTML = \"\";\n  sidebar.style.transform = \"scale(0,1)\";\n  window.setTimeout(function () {\n    sidebar.style.zIndex = -1;\n  }, 400);\n};\n\nexports.closeSidebar = closeSidebar;"},"sourceMaps":null,"error":null,"hash":"a0709b4e7b6e29af4bd89adace0d890f","cacheData":{"env":{}}}