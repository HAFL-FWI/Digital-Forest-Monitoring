{"id":"utils/viewer_util.js","dependencies":[{"name":"/Users/hk/Sites/digital-forest-monitoring/package.json","includedInParent":true,"mtime":1574333047455},{"name":"ol","loc":{"line":1,"column":26},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/viewer_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/index.js"},{"name":"ol/control","loc":{"line":2,"column":44},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/viewer_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/control.js"},{"name":"@material/switch","loc":{"line":3,"column":26},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/viewer_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/switch/index.js"},{"name":"@material/slider","loc":{"line":4,"column":26},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/viewer_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/slider/index.js"},{"name":"@material/list","loc":{"line":5,"column":24},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/viewer_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/list/index.js"},{"name":"ol/ol.css","loc":{"line":6,"column":7},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/viewer_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/ol.css"},{"name":"./basemap_util","loc":{"line":7,"column":59},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/viewer_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/src/utils/basemap_util.js"},{"name":"./main_util","loc":{"line":8,"column":56},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/viewer_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/src/utils/main_util.js"},{"name":"./init","loc":{"line":9,"column":26},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/viewer_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/src/utils/init.js"},{"name":"./BasemapControl","loc":{"line":10,"column":27},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/viewer_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/src/utils/BasemapControl.js"},{"name":"./VHMControl","loc":{"line":11,"column":23},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/viewer_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/src/utils/VHMControl.js"},{"name":"./VeraenderungControl","loc":{"line":12,"column":32},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/viewer_util.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/src/utils/VeraenderungControl.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ol = require(\"ol\");\n\nvar _control = require(\"ol/control\");\n\nvar _switch = require(\"@material/switch\");\n\nvar _slider = require(\"@material/slider\");\n\nvar _list = require(\"@material/list\");\n\nrequire(\"ol/ol.css\");\n\nvar _basemap_util = require(\"./basemap_util\");\n\nvar _main_util = require(\"./main_util\");\n\nvar _init = require(\"./init\");\n\nvar _BasemapControl = _interopRequireDefault(require(\"./BasemapControl\"));\n\nvar _VHMControl = _interopRequireDefault(require(\"./VHMControl\"));\n\nvar _VeraenderungControl = _interopRequireDefault(require(\"./VeraenderungControl\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar viewerUtil = {\n  model: {\n    /*\n     * the element with the content below the app bar.\n     */\n    content: document.getElementsByClassName(\"content\")[0],\n    searchResultsList: document.querySelector(\".mdc-list\")\n  },\n  controller: {\n    /*\n     * calls the necessary functions to display the viewer.\n     * @param {object} params.\n     * @param {string} params.title - the title/name of the viewer.\n     */\n    init: function init(_ref) {\n      var title = _ref.title;\n      viewerUtil.controller.removeContent();\n      viewerUtil.controller.createContainer();\n      viewerUtil.controller.showViewer(title); // instantiating the material components\n\n      var switches = [].map.call(document.querySelectorAll(\".mdc-switch\"), function (el) {\n        return new _switch.MDCSwitch(el);\n      });\n      var sliders = [].map.call(document.querySelectorAll(\".mdc-slider\"), function (el) {\n        return new _slider.MDCSlider(el);\n      });\n      viewerUtil.model.searchList = new _list.MDCList(document.querySelector(\".mdc-list\"));\n      viewerUtil.model.searchList.singleSelection = true; // make the search input value equal the focus element\n\n      viewerUtil.model.searchList.listen(\"focusin\", function (e) {\n        _init.textField.value = e.target.innerText;\n      }); // show the geometry on the map if a list item gets selected\n\n      viewerUtil.model.searchList.listen(\"MDCList:action\", function () {\n        viewerUtil.controller.showSearchGeometry();\n        viewerUtil.controller.closeSearchResults(_main_util.searchResults);\n      });\n    },\n\n    /*\n     * displays the geometry from the currently selected search result on the map\n     */\n    showSearchGeometry: function showSearchGeometry() {\n      var selectedIndex = viewerUtil.model.searchList.selectedIndex;\n      var selectedElement = viewerUtil.model.searchList.listElements[selectedIndex];\n      (0, _main_util.displayGeojson)({\n        geojson: JSON.parse(selectedElement.dataset.geojson),\n        map: viewerUtil.model.map\n      });\n    },\n\n    /*\n     * removes 'old' content like homepage, services etc.\n     */\n    removeContent: function removeContent() {\n      viewerUtil.model.content.innerHTML = \"\";\n    },\n\n    /*\n     * displays the ol viewer\n     */\n    createContainer: function createContainer() {\n      viewerUtil.model.viewerContainer = viewerUtil.view.getViewerContainer();\n      viewerUtil.model.content.appendChild(viewerUtil.model.viewerContainer);\n    },\n\n    /*\n     * display the ol viewer inside the viewer container\n     * @param {string} title - the title to display on top of the layer control.\n     */\n    showViewer: function showViewer(title) {\n      viewerUtil.model.map = new _ol.Map({\n        view: new _ol.View({\n          center: [829300, 5933555],\n          //Bern\n          zoom: 13,\n          minZoom: 9,\n          maxZoom: 21\n        }),\n        layers: [_basemap_util.orthoBasemap, _basemap_util.swBasemap, _basemap_util.vegetationBasemap],\n        target: \"map\",\n        controls: (0, _control.defaults)({\n          attributionOptions: {\n            collapsible: false\n          }\n        })\n      });\n      var basemapSwitch = new _BasemapControl.default(viewerUtil.model.map);\n      var vhmControl = new _VHMControl.default(viewerUtil.model.map);\n      var layerControl = new _VeraenderungControl.default({\n        map: viewerUtil.model.map,\n        title: title\n      });\n      viewerUtil.model.map.addControl(basemapSwitch.createBasemapControl());\n      viewerUtil.model.map.addControl(vhmControl.createVHMControl());\n      viewerUtil.model.map.addControl(layerControl.createVeraenderungControl());\n      viewerUtil.model.map.addEventListener(\"click\", function (e) {\n        return console.log(e);\n      });\n    },\n\n    /*\n     * close the search results and set the correct z-index in order for paning/zooming to work as expected.\n     * @param {domElement} searchResults - the search results container.\n     * @returns {domElement} searchResults - the search results container or false in case of failure.\n     */\n    closeSearchResults: function closeSearchResults(searchResults) {\n      if (searchResults) {\n        searchResults.style.transform = \"scale(1,0)\";\n        searchResults.style.zIndex = -1;\n        return searchResults;\n      }\n\n      return false;\n    },\n\n    /*\n     * performs the places search\n     * @param {object} event - textfield input event\n     * @returns {object} promise - a promise with searchresults\n     */\n    performSearch: (0, _main_util.debounce)(function (e) {\n      viewerUtil.controller.closeSearchResults(_main_util.searchResults);\n      var searchString = e.target.value;\n      viewerUtil.model.searchResultsList.innerHTML = \"\";\n\n      if (searchString.length > 1) {\n        _main_util.searchResults.style.zIndex = 5;\n        _main_util.searchResults.style.transform = \"scale(1)\";\n        var url = \"https://api3.geo.admin.ch/rest/services/api/SearchServer?searchText=\".concat(e.target.value, \"&type=locations&limit=50&sr=3857&geometryFormat=geojson\");\n        var request = new XMLHttpRequest();\n        request.open(\"GET\", url, true);\n\n        request.onload = function () {\n          if (request.status >= 500) {\n            viewerUtil.model.searchResultsList.innerHTML = \"<div style=\\\"padding:12px\\\">Sorry, es konnten keine Resultate gefunden werden....</div>\";\n            return;\n          }\n\n          var featureCollection = JSON.parse(request.responseText);\n          featureCollection.features.forEach(function (feature, index) {\n            var listItem = document.createElement(\"li\"); // add the geojson as a data attribute\n\n            listItem.setAttribute(\"data-geojson\", JSON.stringify(feature));\n            var listItemText = document.createElement(\"span\");\n            listItem.classList.add(\"mdc-list-item\");\n            listItemText.classList.add(\"mdc-list-item__text\");\n\n            if (index === 0) {\n              listItem.tabIndex = index;\n            }\n\n            listItemText.innerHTML = \"\".concat(feature.properties.label);\n            listItem.appendChild(listItemText);\n            viewerUtil.model.searchResultsList.appendChild(listItem);\n          });\n          viewerUtil.model.searchList.layout();\n        };\n\n        request.onerror = function () {\n          viewerUtil.model.searchResultsList.innerHTML = \"<div style=\\\"padding:12px\\\">Es gab einen Fehler bei der Suchanfrage....</div>\";\n        };\n\n        request.send();\n      }\n    }, 250)\n  },\n  view: {\n    /*\n     * creates a full width/height container for the  viewer\n     * @returns {DomElement} - a div with the right styles to be used as the map.\n     */\n    getViewerContainer: function getViewerContainer() {\n      var viewerContainer = document.createElement(\"div\");\n      viewerContainer.id = \"map\";\n      return viewerContainer;\n    }\n  }\n};\nvar _default = viewerUtil;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"a2713f2ba6880a4015e9478a29601bc7","cacheData":{"env":{}}}