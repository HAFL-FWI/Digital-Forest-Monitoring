{"id":"../node_modules/ol/source/Image.js","dependencies":[{"name":"/Users/hk/Sites/digital-forest-monitoring/package.json","includedInParent":true,"mtime":1574333047455},{"name":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/package.json","includedInParent":true,"mtime":1573122283680},{"name":"../util.js","loc":{"line":17,"column":25},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/source/Image.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/util.js"},{"name":"../reproj/common.js","loc":{"line":18,"column":43},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/source/Image.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/reproj/common.js"},{"name":"../ImageState.js","loc":{"line":19,"column":23},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/source/Image.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/ImageState.js"},{"name":"../array.js","loc":{"line":20,"column":34},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/source/Image.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/array.js"},{"name":"../events/Event.js","loc":{"line":21,"column":18},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/source/Image.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/events/Event.js"},{"name":"../extent.js","loc":{"line":22,"column":23},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/source/Image.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/extent.js"},{"name":"../proj.js","loc":{"line":23,"column":27},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/source/Image.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/proj.js"},{"name":"../reproj/Image.js","loc":{"line":24,"column":24},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/source/Image.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/reproj/Image.js"},{"name":"./Source.js","loc":{"line":25,"column":19},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/source/Image.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/source/Source.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultImageLoadFunction = defaultImageLoadFunction;\nexports.default = exports.ImageSourceEvent = void 0;\n\nvar _util = require(\"../util.js\");\n\nvar _common = require(\"../reproj/common.js\");\n\nvar _ImageState = _interopRequireDefault(require(\"../ImageState.js\"));\n\nvar _array = require(\"../array.js\");\n\nvar _Event = _interopRequireDefault(require(\"../events/Event.js\"));\n\nvar _extent = require(\"../extent.js\");\n\nvar _proj = require(\"../proj.js\");\n\nvar _Image = _interopRequireDefault(require(\"../reproj/Image.js\"));\n\nvar _Source = _interopRequireDefault(require(\"./Source.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __extends = void 0 && (void 0).__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/source/Image\n */\n\n\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\n\nvar ImageSourceEvent =\n/** @class */\nfunction (_super) {\n  __extends(ImageSourceEvent, _super);\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n\n\n  function ImageSourceEvent(type, image) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n\n\n    _this.image = image;\n    return _this;\n  }\n\n  return ImageSourceEvent;\n}(_Event.default);\n\nexports.ImageSourceEvent = ImageSourceEvent;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource =\n/** @class */\nfunction (_super) {\n  __extends(ImageSource, _super);\n  /**\n   * @param {Options} options Single image source options.\n   */\n\n\n  function ImageSource(options) {\n    var _this = _super.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state\n    }) || this;\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n\n    _this.resolutions_ = options.resolutions !== undefined ? options.resolutions : null;\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n\n    _this.reprojectedImage_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.reprojectedRevision_ = 0;\n    return _this;\n  }\n  /**\n   * @return {Array<number>} Resolutions.\n   * @override\n   */\n\n\n  ImageSource.prototype.getResolutions = function () {\n    return this.resolutions_;\n  };\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n\n\n  ImageSource.prototype.findNearestResolution = function (resolution) {\n    if (this.resolutions_) {\n      var idx = (0, _array.linearFindNearest)(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n\n    return resolution;\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n\n\n  ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n\n    if (!_common.ENABLE_RASTER_REPROJECTION || !sourceProjection || !projection || (0, _proj.equivalent)(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() && (0, _proj.equivalent)(this.reprojectedImage_.getProjection(), projection) && this.reprojectedImage_.getResolution() == resolution && (0, _extent.equals)(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new _Image.default(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n        return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n      }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n      return this.reprojectedImage_;\n    }\n  };\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n\n\n  ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n    return (0, _util.abstract)();\n  };\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n\n\n  ImageSource.prototype.handleImageChange = function (event) {\n    var image =\n    /** @type {import(\"../Image.js\").default} */\n    event.target;\n\n    switch (image.getState()) {\n      case _ImageState.default.LOADING:\n        this.loading = true;\n        this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n        break;\n\n      case _ImageState.default.LOADED:\n        this.loading = false;\n        this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n        break;\n\n      case _ImageState.default.ERROR:\n        this.loading = false;\n        this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n        break;\n\n      default: // pass\n\n    }\n  };\n\n  return ImageSource;\n}(_Source.default);\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\n\n\nfunction defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */\n  image.getImage().src = src;\n}\n\nvar _default = ImageSource;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"56702d78ce16f66f291c4d7790835fdb","cacheData":{"env":{}}}