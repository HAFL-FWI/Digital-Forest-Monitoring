{"id":"../node_modules/@material/tab/component.js","dependencies":[{"name":"/Users/hk/Sites/digital-forest-monitoring/package.json","includedInParent":true,"mtime":1573726889251},{"name":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/tab/package.json","includedInParent":true,"mtime":1573726886894},{"name":"tslib","loc":{"line":23,"column":25},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/tab/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/tslib/tslib.es6.js"},{"name":"@material/base/component","loc":{"line":24,"column":29},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/tab/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/base/component.js"},{"name":"@material/ripple/component","loc":{"line":25,"column":26},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/tab/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/ripple/component.js"},{"name":"@material/ripple/foundation","loc":{"line":26,"column":36},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/tab/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/ripple/foundation.js"},{"name":"@material/tab-indicator/component","loc":{"line":27,"column":32},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/tab/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/tab-indicator/component.js"},{"name":"./foundation","loc":{"line":28,"column":33},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/tab/component.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/tab/foundation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MDCTab = void 0;\n\nvar tslib_1 = _interopRequireWildcard(require(\"tslib\"));\n\nvar _component = require(\"@material/base/component\");\n\nvar _component2 = require(\"@material/ripple/component\");\n\nvar _foundation = require(\"@material/ripple/foundation\");\n\nvar _component3 = require(\"@material/tab-indicator/component\");\n\nvar _foundation2 = require(\"./foundation\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCTab =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCTab, _super);\n\n  function MDCTab() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MDCTab.attachTo = function (root) {\n    return new MDCTab(root);\n  };\n\n  MDCTab.prototype.initialize = function (rippleFactory, tabIndicatorFactory) {\n    if (rippleFactory === void 0) {\n      rippleFactory = function (el, foundation) {\n        return new _component2.MDCRipple(el, foundation);\n      };\n    }\n\n    if (tabIndicatorFactory === void 0) {\n      tabIndicatorFactory = function (el) {\n        return new _component3.MDCTabIndicator(el);\n      };\n    }\n\n    this.id = this.root_.id;\n    var rippleSurface = this.root_.querySelector(_foundation2.MDCTabFoundation.strings.RIPPLE_SELECTOR);\n\n    var rippleAdapter = tslib_1.__assign({}, _component2.MDCRipple.createAdapter(this), {\n      addClass: function (className) {\n        return rippleSurface.classList.add(className);\n      },\n      removeClass: function (className) {\n        return rippleSurface.classList.remove(className);\n      },\n      updateCssVariable: function (varName, value) {\n        return rippleSurface.style.setProperty(varName, value);\n      }\n    });\n\n    var rippleFoundation = new _foundation.MDCRippleFoundation(rippleAdapter);\n    this.ripple_ = rippleFactory(this.root_, rippleFoundation);\n    var tabIndicatorElement = this.root_.querySelector(_foundation2.MDCTabFoundation.strings.TAB_INDICATOR_SELECTOR);\n    this.tabIndicator_ = tabIndicatorFactory(tabIndicatorElement);\n    this.content_ = this.root_.querySelector(_foundation2.MDCTabFoundation.strings.CONTENT_SELECTOR);\n  };\n\n  MDCTab.prototype.initialSyncWithDOM = function () {\n    var _this = this;\n\n    this.handleClick_ = function () {\n      return _this.foundation_.handleClick();\n    };\n\n    this.listen('click', this.handleClick_);\n  };\n\n  MDCTab.prototype.destroy = function () {\n    this.unlisten('click', this.handleClick_);\n    this.ripple_.destroy();\n\n    _super.prototype.destroy.call(this);\n  };\n\n  MDCTab.prototype.getDefaultFoundation = function () {\n    var _this = this; // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n\n\n    var adapter = {\n      setAttr: function (attr, value) {\n        return _this.root_.setAttribute(attr, value);\n      },\n      addClass: function (className) {\n        return _this.root_.classList.add(className);\n      },\n      removeClass: function (className) {\n        return _this.root_.classList.remove(className);\n      },\n      hasClass: function (className) {\n        return _this.root_.classList.contains(className);\n      },\n      activateIndicator: function (previousIndicatorClientRect) {\n        return _this.tabIndicator_.activate(previousIndicatorClientRect);\n      },\n      deactivateIndicator: function () {\n        return _this.tabIndicator_.deactivate();\n      },\n      notifyInteracted: function () {\n        return _this.emit(_foundation2.MDCTabFoundation.strings.INTERACTED_EVENT, {\n          tabId: _this.id\n        }, true\n        /* bubble */\n        );\n      },\n      getOffsetLeft: function () {\n        return _this.root_.offsetLeft;\n      },\n      getOffsetWidth: function () {\n        return _this.root_.offsetWidth;\n      },\n      getContentOffsetLeft: function () {\n        return _this.content_.offsetLeft;\n      },\n      getContentOffsetWidth: function () {\n        return _this.content_.offsetWidth;\n      },\n      focus: function () {\n        return _this.root_.focus();\n      }\n    }; // tslint:enable:object-literal-sort-keys\n\n    return new _foundation2.MDCTabFoundation(adapter);\n  };\n\n  Object.defineProperty(MDCTab.prototype, \"active\", {\n    /**\n     * Getter for the active state of the tab\n     */\n    get: function () {\n      return this.foundation_.isActive();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(MDCTab.prototype, \"focusOnActivate\", {\n    set: function (focusOnActivate) {\n      this.foundation_.setFocusOnActivate(focusOnActivate);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Activates the tab\n   */\n\n  MDCTab.prototype.activate = function (computeIndicatorClientRect) {\n    this.foundation_.activate(computeIndicatorClientRect);\n  };\n  /**\n   * Deactivates the tab\n   */\n\n\n  MDCTab.prototype.deactivate = function () {\n    this.foundation_.deactivate();\n  };\n  /**\n   * Returns the indicator's client rect\n   */\n\n\n  MDCTab.prototype.computeIndicatorClientRect = function () {\n    return this.tabIndicator_.computeContentClientRect();\n  };\n\n  MDCTab.prototype.computeDimensions = function () {\n    return this.foundation_.computeDimensions();\n  };\n  /**\n   * Focuses the tab\n   */\n\n\n  MDCTab.prototype.focus = function () {\n    this.root_.focus();\n  };\n\n  return MDCTab;\n}(_component.MDCComponent);\n\nexports.MDCTab = MDCTab;"},"sourceMaps":null,"error":null,"hash":"c20d680b543066b2ac7a0ef597ac2bf1","cacheData":{"env":{}}}