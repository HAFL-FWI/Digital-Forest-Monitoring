{"id":"../node_modules/ol/style/IconImage.js","dependencies":[{"name":"/Users/hk/Sites/digital-forest-monitoring/package.json","includedInParent":true,"mtime":1574333047455},{"name":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/package.json","includedInParent":true,"mtime":1573122283680},{"name":"../dom.js","loc":{"line":17,"column":38},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/style/IconImage.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/dom.js"},{"name":"../events/Target.js","loc":{"line":18,"column":24},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/style/IconImage.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/events/Target.js"},{"name":"../events/EventType.js","loc":{"line":19,"column":22},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/style/IconImage.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/events/EventType.js"},{"name":"../ImageState.js","loc":{"line":20,"column":23},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/style/IconImage.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/ImageState.js"},{"name":"./IconImageCache.js","loc":{"line":21,"column":41},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/style/IconImage.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/style/IconImageCache.js"},{"name":"../Image.js","loc":{"line":22,"column":28},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/style/IconImage.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/Image.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = get;\nexports.default = void 0;\n\nvar _dom = require(\"../dom.js\");\n\nvar _Target = _interopRequireDefault(require(\"../events/Target.js\"));\n\nvar _EventType = _interopRequireDefault(require(\"../events/EventType.js\"));\n\nvar _ImageState = _interopRequireDefault(require(\"../ImageState.js\"));\n\nvar _IconImageCache = require(\"./IconImageCache.js\");\n\nvar _Image = require(\"../Image.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @module ol/style/IconImage\n */\nvar __extends = void 0 && (void 0).__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar IconImage =\n/** @class */\nfunction (_super) {\n  __extends(IconImage, _super);\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n\n\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n    var _this = _super.call(this) || this;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n\n    _this.hitDetectionImage_ = null;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n    _this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */\n      _this.image_.crossOrigin = crossOrigin;\n    }\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n\n\n    _this.canvas_ = color ? document.createElement('canvas') : null;\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n\n    _this.color_ = color;\n    /**\n     * @private\n     * @type {?function():void}\n     */\n\n    _this.unlisten_ = null;\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n\n    _this.imageState_ = imageState;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    _this.size_ = size;\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n\n    _this.src_ = src;\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n\n    _this.tainted_;\n    return _this;\n  }\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n\n\n  IconImage.prototype.isTainted_ = function () {\n    if (this.tainted_ === undefined && this.imageState_ === _ImageState.default.LOADED) {\n      this.tainted_ = false;\n      var context = (0, _dom.createCanvasContext2D)(1, 1);\n\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n\n    return this.tainted_ === true;\n  };\n  /**\n   * @private\n   */\n\n\n  IconImage.prototype.dispatchChangeEvent_ = function () {\n    this.dispatchEvent(_EventType.default.CHANGE);\n  };\n  /**\n   * @private\n   */\n\n\n  IconImage.prototype.handleImageError_ = function () {\n    this.imageState_ = _ImageState.default.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n  /**\n   * @private\n   */\n\n\n  IconImage.prototype.handleImageLoad_ = function () {\n    this.imageState_ = _ImageState.default.LOADED;\n\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n\n\n  IconImage.prototype.getImage = function (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n\n\n  IconImage.prototype.getImageState = function () {\n    return this.imageState_;\n  };\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n\n\n  IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = (0, _dom.createCanvasContext2D)(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n\n    return this.hitDetectionImage_;\n  };\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n\n\n  IconImage.prototype.getSize = function () {\n    return this.size_;\n  };\n  /**\n   * @return {string|undefined} Image src.\n   */\n\n\n  IconImage.prototype.getSrc = function () {\n    return this.src_;\n  };\n  /**\n   * Load not yet loaded URI.\n   */\n\n\n  IconImage.prototype.load = function () {\n    if (this.imageState_ == _ImageState.default.IDLE) {\n      this.imageState_ = _ImageState.default.LOADING;\n\n      try {\n        /** @type {HTMLImageElement} */\n        this.image_.src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n\n      this.unlisten_ = (0, _Image.listenImage)(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  IconImage.prototype.replaceColor_ = function () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n\n    ctx.putImageData(imgData, 0, 0);\n  };\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n\n\n  IconImage.prototype.unlistenImage_ = function () {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  };\n\n  return IconImage;\n}(_Target.default);\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\n\n\nfunction get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = _IconImageCache.shared.get(src, crossOrigin, color);\n\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n\n    _IconImageCache.shared.set(src, crossOrigin, color, iconImage);\n  }\n\n  return iconImage;\n}\n\nvar _default = IconImage;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"45b13f68ea6b4680c3ac0bbe9e461041","cacheData":{"env":{}}}