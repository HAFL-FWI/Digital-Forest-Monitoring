{"id":"../node_modules/ol/TileCache.js","dependencies":[{"name":"/Users/hk/Sites/digital-forest-monitoring/package.json","includedInParent":true,"mtime":1574333047455},{"name":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/package.json","includedInParent":true,"mtime":1573122283680},{"name":"./structs/LRUCache.js","loc":{"line":17,"column":21},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/TileCache.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/structs/LRUCache.js"},{"name":"./tilecoord.js","loc":{"line":18,"column":32},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/TileCache.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/tilecoord.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _LRUCache = _interopRequireDefault(require(\"./structs/LRUCache.js\"));\n\nvar _tilecoord = require(\"./tilecoord.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar __extends = void 0 && (void 0).__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/TileCache\n */\n\n\nvar TileCache =\n/** @class */\nfunction (_super) {\n  __extends(TileCache, _super);\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n\n\n  function TileCache(opt_highWaterMark) {\n    return _super.call(this, opt_highWaterMark) || this;\n  }\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n\n\n  TileCache.prototype.expireCache = function (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n\n\n  TileCache.prototype.pruneExceptNewestZ = function () {\n    if (this.getCount() === 0) {\n      return;\n    }\n\n    var key = this.peekFirstKey();\n    var tileCoord = (0, _tilecoord.fromKey)(key);\n    var z = tileCoord[0];\n    this.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove((0, _tilecoord.getKey)(tile.tileCoord));\n        tile.dispose();\n      }\n    }.bind(this));\n  };\n\n  return TileCache;\n}(_LRUCache.default);\n\nvar _default = TileCache;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"2e331e97ef1782fc12620e4b3aac13f0","cacheData":{"env":{}}}