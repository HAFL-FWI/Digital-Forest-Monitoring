{"id":"utils/VeraenderungControl.js","dependencies":[{"name":"/Users/hk/Sites/digital-forest-monitoring/package.json","includedInParent":true,"mtime":1574333047455},{"name":"ol/control","loc":{"line":1,"column":24},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/VeraenderungControl.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/control.js"},{"name":"ol/layer/Tile","loc":{"line":2,"column":22},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/VeraenderungControl.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/layer/Tile.js"},{"name":"ol/source","loc":{"line":3,"column":24},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/VeraenderungControl.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/ol/source.js"},{"name":"@material/slider","loc":{"line":4,"column":26},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/VeraenderungControl.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/slider/index.js"},{"name":"./main_util","loc":{"line":5,"column":42},"parent":"/Users/hk/Sites/digital-forest-monitoring/src/utils/VeraenderungControl.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/src/utils/main_util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _control = require(\"ol/control\");\n\nvar _Tile = _interopRequireDefault(require(\"ol/layer/Tile\"));\n\nvar _source = require(\"ol/source\");\n\nvar _slider = require(\"@material/slider\");\n\nvar _main_util = require(\"./main_util\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar VeraenderungControl =\n/*#__PURE__*/\nfunction () {\n  function VeraenderungControl(_ref) {\n    var map = _ref.map,\n        title = _ref.title;\n\n    _classCallCheck(this, VeraenderungControl);\n\n    this.map = map;\n    this.title = title;\n    this.overlays = [{\n      layername: \"karten-werk:ndvi_max_ch_forest_diff_2018_2017\",\n      displayName: \"Veränderung 17/18\",\n      description: \"Difference between NDVI Maximum of 2018 and 2017, clipped to forest areas, Switzerland (expect small area in SW):\\n        Sentinel-2 NDVI maximum June & July for 2017\\n        Sentinel-2 NDVI maximum June & July for 2018\\n        Difference between 2018-2017\",\n      visible: true\n    }, {\n      layername: \"karten-werk:ndvi_max_ch_forest_diff_2018_2017_decrease\",\n      displayName: \"Vegetationsabnahme 17/18\",\n      description: \"Difference between NDVI Maximum of 2018 and 2017, clipped to forest areas, Switzerland (expect small area in SW):\\n        Sentinel-2 NDVI maximum June & July for 2017\\n        Sentinel-2 NDVI maximum June & July for 2018\\n        This layer displays only areas where the ndvi has decresed e.g. areas of vegetation loss.\\n        Difference between 2018-2017\",\n      visible: false\n    }];\n  }\n  /*\n   * creates the whole layer control for the \"jaehrliche veränderung\" viewer.\n   * @returns {HTMLElement} veraenderungControlElement - a div with all the necessary children.\n   */\n\n\n  _createClass(VeraenderungControl, [{\n    key: \"createVeraenderungControl\",\n    value: function createVeraenderungControl() {\n      var veraenderungFragment = new DocumentFragment(); //title section\n\n      var viewerTitle = document.createElement(\"div\");\n      viewerTitle.classList.add(\"veraenderungControl__title\");\n      viewerTitle.addEventListener(\"click\", function () {\n        var controlsHeight = layerControls.getBoundingClientRect().height;\n\n        if (controlsHeight === 0) {\n          layerControls.style.transform = \"scale(1,1)\";\n          layerControls.style.opacity = 1;\n          titleArrow.style.transform = \"rotate(0deg)\";\n        } else {\n          layerControls.style.opacity = 0;\n          layerControls.style.transform = \"scale(1,0)\";\n          titleArrow.style.transform = \"rotate(-90deg)\";\n        }\n      });\n      var title = document.createElement(\"span\");\n      title.style.flexGrow = 1;\n      title.style.fontSize = \"17px\";\n      title.innerHTML = this.title;\n      var titleIcon = document.createElement(\"i\");\n      titleIcon.classList.add(\"material-icons\");\n      titleIcon.innerHTML = \"tune\";\n      var titleArrow = document.createElement(\"i\");\n      titleArrow.classList.add(\"material-icons\", \"title__arrow\");\n      titleArrow.innerHTML = \"keyboard_arrow_down\";\n      title.title = \"Schaltflächen anzeigen\";\n      viewerTitle.appendChild(title);\n      viewerTitle.appendChild(titleIcon);\n      viewerTitle.appendChild(titleArrow); // add layers and controls\n\n      var layerControls = this.getLayerControls();\n      veraenderungFragment.appendChild(viewerTitle);\n      veraenderungFragment.appendChild(layerControls);\n      var veraenderungControl = new _control.Control({\n        element: veraenderungFragment\n      });\n      return veraenderungControl;\n    }\n  }, {\n    key: \"getLayerControls\",\n    value: function getLayerControls() {\n      var _this = this;\n\n      var controls = document.createElement(\"div\");\n      controls.classList.add(\"veraenderungControl__controls\");\n      this.overlays.forEach(function (overlay) {\n        var wmsLayer = _this.createWmsLayer(overlay);\n\n        _this.map.addLayer(wmsLayer);\n\n        var control = document.createElement(\"div\");\n        control.classList.add(\"veraenderungControl__controls-control\");\n        control.appendChild(_this.getSwitch({\n          wmsLayer: wmsLayer,\n          overlay: overlay\n        }));\n        control.appendChild(_this.getLayerInfoIcon(overlay));\n        control.appendChild(_this.getSlider(wmsLayer));\n        controls.appendChild(control);\n      });\n      return controls;\n    }\n    /*\n     * creates a ol wms overlay for a geoserver layer.\n     * @param {object} overlay - overlay object like stored in the model.\n     * @returns {object} TileLayer - ol.TileLayer instance.\n     */\n\n  }, {\n    key: \"createWmsLayer\",\n    value: function createWmsLayer(overlay) {\n      var url = \"https://geoserver.karten-werk.ch/wms\";\n      var wmsLayer = new _Tile.default({\n        opacity: 1,\n        source: new _source.TileWMS({\n          url: url,\n          params: {\n            LAYERS: \"\".concat(overlay.layername),\n            FORMAT: \"image/png\",\n            SRS: \"EPSG:3857\" //TILED: true\n\n          },\n          serverType: \"geoserver\",\n          //do not fade tiles:\n          transition: 0\n        })\n      });\n      wmsLayer.name = \"\".concat(overlay.layername);\n      wmsLayer.setVisible(overlay.visible);\n      return wmsLayer;\n    }\n    /*\n     * creates the layer info (i) icon\n     * @param {object} overlay - overlay item like stored in this.overlays\n     * @returns {HTMLElement} layerInfo - the info icon.\n     */\n\n  }, {\n    key: \"getLayerInfoIcon\",\n    value: function getLayerInfoIcon(overlay) {\n      var layerInfo = document.createElement(\"button\");\n      layerInfo.classList.add(\"layerinfo-button\", \"mdc-icon-button\", \"material-icons\");\n      layerInfo.innerHTML = \"info\";\n      layerInfo.addEventListener(\"click\", function () {\n        var content = new DocumentFragment();\n        var title = document.createElement(\"h3\");\n        title.innerHTML = \"\".concat(overlay.displayName);\n        var description = document.createElement(\"div\");\n        description.innerHTML = (0, _main_util.getLayerInfo)(overlay);\n        content.appendChild(title);\n        content.appendChild(description);\n        (0, _main_util.openSidebar)({\n          content: content\n        });\n      });\n      return layerInfo;\n    }\n    /*\n     * creates the layer on/off switch\n     * @returns {DocumentFragment} switchFragment- the labeled switch.\n     */\n\n  }, {\n    key: \"getSwitch\",\n    value: function getSwitch() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          wmsLayer = _ref2.wmsLayer,\n          overlay = _ref2.overlay;\n\n      var switchFragment = new DocumentFragment();\n      var layerSwitch = document.createElement(\"div\");\n      var switchTrack = document.createElement(\"div\");\n      var thumbUnderlay = document.createElement(\"div\");\n      var thumb = document.createElement(\"div\");\n      var input = document.createElement(\"input\");\n      var label = document.createElement(\"label\");\n      layerSwitch.classList.add(\"mdc-switch\");\n      switchTrack.classList.add(\"mdc-switch__track\");\n      thumbUnderlay.classList.add(\"mdc-switch__thumb-underlay\");\n      thumb.classList.add(\"mdc-switch__thumb\");\n      input.classList.add(\"mdc-switch__native-control\");\n      input.type = \"checkbox\";\n      input.id = \"\".concat(overlay.layername, \"_switch\");\n      input.checked = overlay.visible;\n      input.setAttribute(\"role\", \"switch\");\n\n      if (wmsLayer && overlay.displayName) {\n        input.addEventListener(\"change\", function (e) {\n          wmsLayer.setVisible(e.target.checked);\n        });\n      }\n\n      label.for = \"layer-switch\";\n      label.innerHTML = \"\".concat(overlay.displayName);\n      label.style.padding = \"0 0 0 12px\";\n      label.style.flexGrow = 1;\n      label.style.fontSize = \"12px\";\n      thumb.appendChild(input);\n      thumbUnderlay.appendChild(thumb);\n      layerSwitch.appendChild(switchTrack);\n      layerSwitch.appendChild(thumbUnderlay);\n      switchFragment.appendChild(layerSwitch);\n      switchFragment.appendChild(label);\n      return switchFragment;\n    }\n    /*\n     * creates the layer transparency slider\n     * @returns {DocumentFragment} slider - transparency slider.\n     */\n\n  }, {\n    key: \"getSlider\",\n    value: function getSlider(wmsLayer) {\n      var sliderContainer = document.createElement(\"div\");\n      sliderContainer.classList.add(\"slidercontainer\");\n      var opacityIcon = document.createElement(\"i\");\n      opacityIcon.classList.add(\"material-icons\");\n      opacityIcon.innerHTML = \"opacity\";\n      opacityIcon.title = \"Transparenz\";\n      opacityIcon.style.padding = \"0 12px 0 0\";\n      var slider = document.createElement(\"div\");\n      slider.id = \"\".concat(wmsLayer.name, \"_slider\");\n      slider.title = \"Transparenz\";\n      var trackContainer = document.createElement(\"div\");\n      var track = document.createElement(\"div\");\n      var thumbContainer = document.createElement(\"div\");\n      var thumbContainerContent = \"<div class=\\\"mdc-slider__pin\\\"><span class=\\\"mdc-slider__pin-value-marker\\\">\\n    </span></div><svg class=\\\"mdc-slider__thumb\\\" width=\\\"21\\\" height=\\\"21\\\">\\n    <circle cx=\\\"10.5\\\" cy=\\\"10.5\\\" r=\\\"7.875\\\"></circle></svg><div class=\\\"mdc-slider__focus-ring\\\"></div>\";\n      slider.classList.add(\"mdc-slider\", \"mdc-slider--discrete\");\n      slider.tabIndex = \"0\";\n      slider.setAttribute(\"role\", \"slider\");\n      slider.setAttribute(\"aria-valuemin\", \"0\");\n      slider.setAttribute(\"aria-valuemax\", \"100\");\n      slider.setAttribute(\"aria-valuenow\", \"100\");\n      slider.setAttribute(\"ariaLabel\", \"transparency slider\");\n      trackContainer.classList.add(\"mdc-slider__track-container\");\n      track.classList.add(\"mdc-slider__track\");\n      thumbContainer.classList.add(\"mdc-slider__thumb-container\");\n      thumbContainer.innerHTML = thumbContainerContent;\n      trackContainer.appendChild(track);\n      slider.appendChild(trackContainer);\n      slider.appendChild(thumbContainer);\n      sliderContainer.appendChild(opacityIcon);\n      sliderContainer.appendChild(slider);\n      var mdcslider = new _slider.MDCSlider(slider);\n      mdcslider.listen(\"MDCSlider:input\", function (e) {\n        var opacity = parseFloat(e.target.getAttribute(\"aria-valuenow\") / 100);\n        wmsLayer.setOpacity(opacity);\n      });\n      return sliderContainer;\n    }\n  }, {\n    key: \"getDivider\",\n    value: function getDivider() {\n      return document.createElement(\"hr\");\n    }\n  }]);\n\n  return VeraenderungControl;\n}();\n\nvar _default = VeraenderungControl;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"4fdeac4cd6733916024e83cc48dd58b5","cacheData":{"env":{}}}