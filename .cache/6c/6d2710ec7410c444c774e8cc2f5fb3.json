{"id":"../node_modules/@material/drawer/modal/foundation.js","dependencies":[{"name":"/Users/hk/Sites/digital-forest-monitoring/package.json","includedInParent":true,"mtime":1573232959620},{"name":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/drawer/package.json","includedInParent":true,"mtime":1573232871885},{"name":"tslib","loc":{"line":23,"column":25},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/drawer/modal/foundation.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/tslib/tslib.es6.js"},{"name":"../dismissible/foundation","loc":{"line":24,"column":47},"parent":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/drawer/modal/foundation.js","resolved":"/Users/hk/Sites/digital-forest-monitoring/node_modules/@material/drawer/dismissible/foundation.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.MDCModalDrawerFoundation = void 0;\n\nvar tslib_1 = _interopRequireWildcard(require(\"tslib\"));\n\nvar _foundation = require(\"../dismissible/foundation\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/* istanbul ignore next: subclass is not a branch statement */\nvar MDCModalDrawerFoundation =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(MDCModalDrawerFoundation, _super);\n\n  function MDCModalDrawerFoundation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Handles click event on scrim.\n   */\n\n\n  MDCModalDrawerFoundation.prototype.handleScrimClick = function () {\n    this.close();\n  };\n  /**\n   * Called when drawer finishes open animation.\n   */\n\n\n  MDCModalDrawerFoundation.prototype.opened_ = function () {\n    this.adapter_.trapFocus();\n  };\n  /**\n   * Called when drawer finishes close animation.\n   */\n\n\n  MDCModalDrawerFoundation.prototype.closed_ = function () {\n    this.adapter_.releaseFocus();\n  };\n\n  return MDCModalDrawerFoundation;\n}(_foundation.MDCDismissibleDrawerFoundation);\n\nexports.MDCModalDrawerFoundation = MDCModalDrawerFoundation;\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nvar _default = MDCModalDrawerFoundation;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"7ffe708f17e79de0bffeca33be2580e1","cacheData":{"env":{}}}